<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()" width="480" height="410" frameRate="30" backgroundColor="#1D1D1C">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>

	
	<fx:Script>
		<![CDATA[

            import com.adobe.images.JPGEncoder;            
            import Base64;
            import flash.external.ExternalInterface;
            import mx.core.FlexGlobals;
            import mx.core.BitmapAsset;
            import flash.net.URLVariables;
            import flash.net.URLLoader;
            import flash.net.URLRequest;
            import flash.net.URLRequestMethod;
            import flash.events.Event;
            import flash.events.IOErrorEvent;

			private var _file:FileReference; 
    		private var _bitmapData:BitmapData;
    		private var _flash:BitmapData;
    		private var _image:ByteArray;
    		private var jpegEncoder:JPGEncoder= new JPGEncoder(80);
    		private var camera:Camera;
            private var video:Video;
            private var still:Bitmap;
            private var flashTimer:Timer;
            private var W:Number=320;
            private var H:Number=320;            

			
			private function init():void {
                // get flashvars, class name and recording id to forward to server                

                // get Camera
                camera = Camera.getCamera();
                camera.setMode(W,H,12,false);
                camera.setQuality(0,100);
                video= new Video(W,H);
                video.attachCamera(camera);
                uic.addChild(video);
                				
				_flash=new BitmapData(W,H,false, 0xFFFFFF);
				
				// set Timers
				
                flashTimer=new Timer(10,1);
                flashTimer.addEventListener(TimerEvent.TIMER_COMPLETE, addStill);
                ExternalInterface.marshallExceptions=true;                ExternalInterface.addCallback("capture", takePhoto);                ExternalInterface.addCallback("release", removeStill);                ExternalInterface.addCallback("save", doSave);
			}
			
			// chain of events in photo taking should be:
			//   take photo
       		//   show flash screen
			//   start flash timer->
			//       hide flash screen
			//       show still    
			
			private function switchStill(bmp:Bitmap):void {
                still_screen.visible=true;
                if (still!=null) {
                    if (still_screen.contains(still)) {
                        still_screen.removeChild(still);
                    }
                }
                still = bmp;
                still_screen.addChild(still);
			}

            private function takePhoto():void {
                flashTimer.reset();                
                flashTimer.start(); // addStill
                switchStill(new Bitmap(_flash))
                _bitmapData=new BitmapData(camera.width, camera.height);
                _bitmapData.draw(video);
                ExternalInterface.call("tookPhoto");
            }

            private function addStill(e:TimerEvent):void {
                switchStill(new Bitmap(_bitmapData));
            }

            private function removeStill():void {
                still_screen.visible=false;
                if (still!=null) {
                    if (still_screen.contains(still)) {
                        still_screen.removeChild(still);
                    }
                }
            }

			private function doSave(server_path:String, class_name:String, user_uid:String) : void {
                var saveObject:URLVariables = new URLVariables();
                var request:URLRequest = new URLRequest(server_path+"photoloader.php");
                var loader:URLLoader = new URLLoader();
                
                loader.addEventListener(Event.COMPLETE, onLoaded);
                loader.addEventListener(IOErrorEvent.IO_ERROR, onError)
                saveObject.picture = Base64.encode(jpegEncoder.encode(_bitmapData));
                saveObject.class_id=class_name;
                saveObject.record_id=user_uid;

                request.method=URLRequestMethod.POST;
                request.data = saveObject;
                function onError(evt:IOErrorEvent):void {
                    ExternalInterface.call("photo_error", "error:"+evt);
                };
                
                function onLoaded(evt:Event):void {
                    ExternalInterface.call("savedPhoto", class_name+'/'+user_uid);
                };
                loader.load(request);
			}			
		]]>
	</fx:Script>
    <mx:UIComponent id="uic" x="0" y="8" width="320" height="320" />
    <mx:UIComponent id="still_screen" x="0" y="8" width="320" height="320" visible="false" />
</s:Application>

